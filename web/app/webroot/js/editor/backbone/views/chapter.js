// Generated by CoffeeScript 1.6.1
var _this = this,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Bachelor.Views.ChapterView = (function(_super) {

  __extends(ChapterView, _super);

  function ChapterView() {
    var _this = this;
    this.jumpToTime = function(e) {
      return ChapterView.prototype.jumpToTime.apply(_this, arguments);
    };
    this.checkChapterActiveInTime = function(currentTime) {
      return ChapterView.prototype.checkChapterActiveInTime.apply(_this, arguments);
    };
    this.editChapter = function() {
      return ChapterView.prototype.editChapter.apply(_this, arguments);
    };
    this.deleteChapter = function() {
      return ChapterView.prototype.deleteChapter.apply(_this, arguments);
    };
    return ChapterView.__super__.constructor.apply(this, arguments);
  }

  ChapterView.prototype.tagName = 'li';

  ChapterView.prototype.events = {
    'click .delete-chapter': 'deleteChapter',
    'click .edit-chapter': 'editChapter',
    'click a': 'jumpToTime'
  };

  ChapterView.prototype.initialize = function() {
    this.model.chapterView = this;
    return Backbone.Events.on('popcornTimeUpdate', this.checkChapterActiveInTime);
  };

  ChapterView.prototype.render = function() {
    this.setContent();
    this.showChapter();
    return this;
  };

  ChapterView.prototype.setContent = function() {
    var chapterName, link;
    chapterName = this.model.get('chapter');
    link = "<a href='#' class='chapter'></a>";
    this.$el.html(link);
    this.$el.find('a').text(chapterName);
    this.addEditChapterIcon();
    return this.addDeleteChapterIcon();
  };

  ChapterView.prototype.addDeleteChapterIcon = function() {
    var icon;
    icon = "<span class='typcn typcn-delete delete-chapter'></span>";
    return this.$el.append(icon);
  };

  ChapterView.prototype.deleteChapter = function() {
    return this.model.setChapterNull();
  };

  ChapterView.prototype.addEditChapterIcon = function() {
    var icon;
    icon = "<span class='typcn typcn-edit edit-chapter'></span>";
    return this.$el.append(icon);
  };

  ChapterView.prototype.editChapter = function() {
    return Bachelor.App.Views.chaptersView.loadEditChapterDialogTemplate(this.model);
  };

  ChapterView.prototype.hideChapter = function() {
    return this.$el.hide();
  };

  ChapterView.prototype.showChapter = function() {
    return this.$el.show();
  };

  ChapterView.prototype.checkChapterActiveInTime = function(currentTime) {
    var $link, end, hasChapter, start, status;
    status = this.model.get('status');
    hasChapter = this.model.get('chapter');
    if (status && hasChapter) {
      start = this.model.get('start');
      end = this.model.get('end');
      currentTime = Math.floor(currentTime);
      $link = this.$el.find('a');
      if (currentTime >= start && currentTime < end) {
        if (!$link.hasClass('active')) {
          return $link.addClass('active');
        }
      } else {
        return $link.removeClass('active');
      }
    }
  };

  ChapterView.prototype.jumpToTime = function(e) {
    var start;
    e.preventDefault();
    start = this.model.get('start');
    return Bachelor.App.pop.jumpTo(start);
  };

  return ChapterView;

})(Backbone.View);
