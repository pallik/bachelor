// Generated by CoffeeScript 1.6.1
var _this = this,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Bachelor.Views.BlockView = (function(_super) {

  __extends(BlockView, _super);

  function BlockView() {
    var _this = this;
    this.render = function() {
      return BlockView.prototype.render.apply(_this, arguments);
    };
    return BlockView.__super__.constructor.apply(this, arguments);
  }

  BlockView.prototype.tagName = 'div';

  BlockView.prototype.className = 'block';

  BlockView.prototype.id = '';

  BlockView.prototype.initialize = function() {
    this.model.on('change', this.render);
    this.model.view = this;
    return this.addPopcornContainer();
  };

  BlockView.prototype.render = function() {
    this.setContent();
    return this;
  };

  BlockView.prototype.setContent = function() {
    var style, target;
    style = this.model.get('style');
    target = this.model.get('target');
    this.$el.attr('style', style);
    this.$el.addClass(target);
    return this.$el.css('border-color', this.model.get('color'));
  };

  BlockView.prototype.addPopcornContainer = function() {
    var div, modelId;
    modelId = this.model.get('id');
    div = "<div id=\"popcorn-container" + modelId + "\" class='popcorn-container'></div>";
    return this.$el.append(div);
  };

  return BlockView;

})(Backbone.View);
