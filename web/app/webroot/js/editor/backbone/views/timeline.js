// Generated by CoffeeScript 1.6.1
var _this = this,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Bachelor.Views.TimelineView = (function(_super) {

  __extends(TimelineView, _super);

  function TimelineView() {
    var _this = this;
    this.togglePin = function(timestamp) {
      return TimelineView.prototype.togglePin.apply(_this, arguments);
    };
    this.addPinView = function(timestamp) {
      return TimelineView.prototype.addPinView.apply(_this, arguments);
    };
    this.setRatioAndEnableSlider = function() {
      return TimelineView.prototype.setRatioAndEnableSlider.apply(_this, arguments);
    };
    this.setSliderValue = function(currentTime) {
      return TimelineView.prototype.setSliderValue.apply(_this, arguments);
    };
    this.onStop = function(event, ui) {
      return TimelineView.prototype.onStop.apply(_this, arguments);
    };
    this.onStart = function() {
      return TimelineView.prototype.onStart.apply(_this, arguments);
    };
    return TimelineView.__super__.constructor.apply(this, arguments);
  }

  TimelineView.prototype.el = $('.timeline');

  TimelineView.prototype.ratio = null;

  TimelineView.prototype.sliding = false;

  TimelineView.prototype.initialize = function() {
    this.setSlider();
    Backbone.Events.on('popcornTimeUpdate', this.setSliderValue);
    Backbone.Events.on('durationchange', this.setRatioAndEnableSlider);
    Bachelor.App.Collections.timestamps.on('add', this.addPinView);
    return Bachelor.App.Collections.timestamps.on('change:status', this.togglePin);
  };

  TimelineView.prototype.setSlider = function() {
    return this.$el.slider({
      range: 'min',
      orientation: 'horizontal',
      step: 0.1,
      start: this.onStart,
      stop: this.onStop,
      disabled: true
    });
  };

  TimelineView.prototype.onStart = function() {
    return this.sliding = true;
  };

  TimelineView.prototype.onStop = function(event, ui) {
    var newTime;
    this.sliding = false;
    newTime = this.ratio * ui.value;
    return Bachelor.App.pop.jumpTo(newTime);
  };

  TimelineView.prototype.setSliderValue = function(currentTime) {
    var newSliderValue;
    if (!this.sliding) {
      newSliderValue = currentTime / this.ratio;
      return this.$el.slider('value', newSliderValue);
    }
  };

  TimelineView.prototype.setRatioAndEnableSlider = function() {
    this.ratio = Bachelor.App.pop.getRatio();
    return this.$el.slider('enable');
  };

  TimelineView.prototype.addPinView = function(timestamp) {
    var viewEnd, viewStart;
    viewStart = new Bachelor.Views.PinView({
      model: timestamp,
      side: 'start'
    });
    return viewEnd = new Bachelor.Views.PinView({
      model: timestamp,
      side: 'end'
    });
  };

  TimelineView.prototype.togglePin = function(timestamp) {
    var status;
    status = timestamp.get('status');
    if (status) {
      this.$el.append(timestamp.pinStartView.render().el);
      return this.$el.append(timestamp.pinEndView.render().el);
    } else {
      timestamp.pinStartView.remove();
      return timestamp.pinEndView.remove();
    }
  };

  return TimelineView;

})(Backbone.View);
