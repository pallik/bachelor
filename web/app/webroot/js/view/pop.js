// Generated by CoffeeScript 1.6.1
var Pop;

Pop = (function() {

  Pop.prototype.popcorn = null;

  function Pop(url) {
    this.url = url;
    this.popcorn = new Popcorn.smart(".masterVideo", this.url);
  }

  /*
  		adds popcorn elements based on timestamps and type
  */


  Pop.prototype.addPopcornElements = function(blocks) {
    var block, timestamp, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = blocks.length; _i < _len; _i++) {
      block = blocks[_i];
      if (!block.master) {
        _results.push((function() {
          var _j, _len1, _ref, _results1;
          _ref = block.Timestamp;
          _results1 = [];
          for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
            timestamp = _ref[_j];
            switch (timestamp.Attachment.Type.name) {
              case 'video':
                _results1.push(this.addPopcornVideo(timestamp));
                break;
              case 'image':
                _results1.push(this.addPopcornImage(timestamp));
                break;
              case 'text':
                _results1.push(this.addPopcornText(timestamp));
                break;
              default:
                _results1.push(void 0);
            }
          }
          return _results1;
        }).call(this));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  /*
         add popcorn video
  */


  Pop.prototype.addPopcornVideo = function(timestamp) {
    return console.log('here should be addPopcornVideo implementation');
  };

  /*
         add popcorn image
  */


  Pop.prototype.addPopcornImage = function(timestamp) {
    return this.popcorn.image({
      start: timestamp.start,
      end: timestamp.end,
      src: app.url + timestamp.Attachment.url,
      target: 'popcorn-container' + timestamp.block_id
    });
  };

  /*
  		add popcorn text
  */


  Pop.prototype.addPopcornText = function(timestamp) {
    return this.popcorn.footnote({
      start: timestamp.start,
      end: timestamp.end,
      text: timestamp.Attachment.text,
      target: 'popcorn-container' + timestamp.block_id
    });
  };

  /*
  		set video time at
  		add active class to link
  */


  Pop.prototype.jumpTo = function(time) {
    if (time === 0) {
      time = 1;
    }
    return this.popcorn.currentTime(time);
  };

  /*
         on timeupdate
  */


  Pop.prototype.onTimeUpdate = function() {
    var _this;
    _this = this;
    return this.popcorn.on('timeupdate', function() {
      var currentTime;
      currentTime = _this.popcorn.currentTime();
      $('.chapter').trigger('timeupdate', currentTime);
      return $('.jcarousel li').trigger('timeupdate', currentTime);
    });
  };

  /*
         on timeupdate for editor section
  */


  Pop.prototype.editorsInit = function() {
    var _this = this;
    this.popcorn.on('timeupdate', function() {
      var currentTime;
      currentTime = _this.popcorn.currentTime();
      return Backbone.Events.trigger('popcornTimeUpdate', currentTime);
    });
    return this.popcorn.on('durationchange', function() {
      return Backbone.Events.trigger('durationchange');
    });
  };

  /*
         get ratio video to timeline
  */


  Pop.prototype.getRatio = function() {
    var _ref, _ref1;
    if ((_ref = this.duration) == null) {
      this.duration = this.popcorn.duration();
    }
    return (_ref1 = this.ratio) != null ? _ref1 : this.ratio = this.duration / 100;
  };

  return Pop;

})();
